Problem: SAT Solver

Your task is to write a Python program that finds a satisfying assignment for a given Boolean formula in Conjunctive Normal Form (CNF).

Input Format:
- The first line contains two integers N and M, where:
  * N is the number of variables (1 ≤ N ≤ 20)
  * M is the number of clauses (1 ≤ M ≤ 100)
- The following M lines each represent a clause:
  * Each line contains space-separated integers ending with 0
  * Each non-zero integer x represents:
    - If x > 0: variable x appears positively
    - If x < 0: variable -x appears negatively
  * Variables are numbered from 1 to N
  * The 0 at the end of each line marks the end of the clause

Output Format:
- If the formula is satisfiable:
  * First line: "SAT"
  * Second line: N space-separated integers (1 or 0), where:
    - The i-th number represents the value assigned to variable i
    - 1 means True
    - 0 means False
- If the formula is unsatisfiable:
  * Single line: "UNSAT"

Example Input 1:
3 2
1 2 0
-1 -2 3 0

Example Output 1:
SAT
1 0 1

Explanation 1:
The formula is: (x₁ ∨ x₂) ∧ (¬x₁ ∨ ¬x₂ ∨ x₃)
Setting x₁ = False, x₂ = False, x₃ = True satisfies all clauses:
- First clause (x₁ ∨ x₂) is satisfied by x₁ = False, x₂ = False
- Second clause (¬x₁ ∨ ¬x₂ ∨ x₃) is satisfied by x₃ = True

Example Input 2:
2 3
1 0
-1 0
2 -2 0

Example Output 2:
UNSAT

Explanation 2:
The formula is: (x₁) ∧ (¬x₁) ∧ (x₂ ∨ ¬x₂)
This is unsatisfiable because x₁ must be both True and False.

Note:
- Your solution must find ANY satisfying assignment (if one exists)
- The formula is guaranteed to be in valid CNF format
- Each clause will have at least one literal
- Each variable number will be between 1 and N
